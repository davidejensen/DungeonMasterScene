import { BlockObject, FilterOptions, LogObject, Quantity, SHHFilterMessage, Syncing, Tag, TransactionObject, TransactionOptions, TransactionReceipt } from '../Schema';
import { BigNumber } from './BigNumber';
/**
 * Should format the output to a big number
 *
 * @param output - The provided output
 */
export declare function outputBigNumberFormatter(output: BigNumber.Value): BigNumber;
/**
 * Returns true if the provided blockNumber is 'latest', 'pending' or 'earliest
 *
 * @param blockNumber - The given blocknumber
 */
export declare function isPredefinedBlockNumber(blockNumber: Quantity | Tag): blockNumber is Tag;
export declare function inputDefaultBlockNumberFormatter(blockNumber?: Quantity | Tag): string | Tag | null;
export declare function inputBlockNumberFormatter(blockNumber: Quantity | Tag | null): string | null;
/**
 * Formats the input of a transaction and converts all values to HEX
 */
export declare function inputCallFormatter(options: TransactionOptions): TransactionOptions;
/**
 * Ensures a correct transactionId is provided
 */
export declare function inputTransactionId(txId: string): string;
/**
 * Formats the input of a transaction and converts all values to HEX
 *
 * @param transaction - options
 */
export declare function inputTransactionFormatter(options: TransactionOptions): TransactionOptions;
/**
 * Formats the output of a transaction to its proper values
 *
 * @param tx - The transaction
 */
export declare function outputTransactionFormatter(tx: TransactionObject): TransactionObject | null;
/**
 * Formats the output of a transaction receipt to its proper values
 *
 * @param receipt - The transaction receipt
 */
export declare function outputTransactionReceiptFormatter(receipt: TransactionReceipt): TransactionReceipt | null;
/**
 * Formats the output of a block to its proper value
 */
export declare function outputBlockFormatter(block: BlockObject | null): BlockObject | null;
/**
 * Formats the output of a log
 */
export declare function outputLogFormatter(log: LogObject): LogObject;
/**
 * Formats the input of a whisper post and converts all values to HEX
 */
export declare function inputPostFormatter(post: any): any;
/**
 * Formats the output of a received post message
 */
export declare function outputPostFormatter(post: SHHFilterMessage): SHHFilterMessage | null;
export declare function inputAddressFormatter(address: string): string;
export declare function inputFilterOptions(options: FilterOptions): FilterOptions;
export declare function outputSyncingFormatter(result: Syncing): Syncing;
//# sourceMappingURL=formatters.d.ts.map