export interface IBounds {
    minX: number;
    minY: number;
    maxX: number;
    maxY: number;
}
export type Coords = {
    x: number;
    y: number;
};
/**
 * Returns metaverse coordinates bounds.
 * TODO: use functions from @dcl/schemas
 */
export declare function getBounds(): IBounds;
/**
 * Parses a string-based set of coordinates.
 * - All spaces are removed
 * - Leading zeroes are removed
 * - `-0` is converted to `0`
 * @param coordinates An string containing coordinates in the `x,y; x,y; ...` format
 */
export declare function parse(coordinates: string): string[];
/**
 * Converts a string-based set of coordinates to an object
 * @param coords A string containing a set of coordinates
 */
export declare function getObject(coords: string): Coords;
/**
 * Returns true if the given coordinates are in metaverse bounds
 */
export declare function inBounds(x: number, y: number): boolean;
/**
 * Returns true if the given parcels array are connected
 */
export declare function areConnected(parcels: Coords[]): boolean;
export declare function isEqual(p1: Coords, p2: Coords): boolean;
